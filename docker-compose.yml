version: '3'

# minio common configs
#x-minio-common: &minio-common
#  image: quay.io/minio/minio
#  command: server --console-address ":9001" http://minio{1...4}/data/{1...2}
#  restart: always
#  expose:
#    - "9000"
#    - "9001"
#  environment:
#    MINIO_ROOT_USER: ${APP_DB_USER}
#    MINIO_ROOT_PASSWORD: ${APP_DB_PASSWORD}
#  healthcheck:
#    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
#    interval: 120s
#    timeout: 20s
#    retries: 3
#  networks:
#    - crater-net

services:
  crater-mongo:
    image: mongo:latest
    container_name: crater-mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_USER}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_PASS}"
    healthcheck:
      test: ["CMD", "echo", "'db.runCommand(\"ping\").ok'", "|", "mongo", "admin", "-u", "${APP_DB_USER}", "-p", "${APP_DB_PASSWORD}", "--quiet"]
      interval: 120s
      timeout: 20s
      retries: 3
    networks:
      - crater-net
    expose:
      - 27017
#    volumes:
#      - crater-mongo-data:/data/db
#  crater-mongo-express:
#    image: mongo-express
#    container_name: crater-mongo-express
#    restart: always
#    environment:
#      - ME_CONFIG_MONGODB_SERVER=crater-mongo
#      - ME_CONFIG_MONGODB_PORT=27017
#      - ME_CONFIG_MONGODB_BASICAUTH_USERNAME=${APP_DB_USER}
#      - ME_CONFIG_MONGODB_BASICAUTH_PASSWORD=${APP_DB_PASSWORD}
#      - ME_CONFIG_MONGODB_ENABLE_ADMIN='true'
#    networks:
#      - crater-net
#    ports:
#      - '6000:8081'
  crater-mysql:
    image: mysql
    container_name: crater-mysql
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    healthcheck:
      test: mysql ${MYSQL_DATABASE} --user=${MYSQL_USER} --password=${MYSQL_PASSWORD} --silent --execute "SELECT 1;"
      interval: 120s
      timeout: 20s
      retries: 3
    networks:
      - crater-net
    expose:
      - 3306
#    volumes:
#      - crater-mysql-data:/var/lib/mysql
#  crater-phpmyadmin:
#    image: phpmyadmin/phpmyadmin
#    container_name: crater-phpmyadmin
#    restart: always
#    environment:
#      PMA_HOST: crater-mysql
#      PMA_PORT: 3306
#      PMA_ARBITRARY: 1
#      PMA_USER: ${APP_DB_USER}
#      PMA_PASSWORD: ${APP_DB_PASSWORD}
#    networks:
#      - crater-net
#    ports:
#      - '5000:80'
  crater-redis:
    image: redis:alpine
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASS}
    container_name: crater-redis
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 120s
      timeout: 20s
      retries: 3
    networks:
      - crater-net
    expose:
      - 6379


  crater-sh:
    depends_on:
      - crater-mysql
      - crater-mongo
#      - crater-minio-nginx
    build: .
    container_name: crater-sh
    restart: always
    environment:
    # old
    #  - DB_NAME=${DB_NAME}
    #  - DB_USER=${APP_DB_USER}
    #  - SQL_HOST=crater-mysql
    #  - SQL_PORT=3306
    #  - NO_SQL_HOST=crater-mongo
    #  - NO_SQL_PORT=27017
    #  - DB_DRIVER=mysql
    #  - DB_PASSWORD=${APP_DB_PASSWORD}
    #  - MINIO_PORT=9000
#      - MINIO_HOST=crsh-minio-nginx
    #  - MINIO_HOST=crater-minio-dev
    #  - REDIS_HOST=crater-redis
    #  - REDIS_PORT=6379
    #  - COOKIE_SIGNATURE=${COOKIE_SIGNATURE}
    # new 
      - COOKIE_SIGNATURE=${COOKIE_SIGNATURE}
      - DB_DRIVER=mysql
      - MINIO_HOST=crater-minio-dev
      - MINIO_PORT=9000
      - MINIO_USER=${MINIO_USER}
      - MINIO_PASS=${MINIO_PASS}
      - NO_SQL_HOST=crater-mongo
      - NO_SQL_PORT=27017
      - MONGO_PASS=${MONGO_PASS}
      - MONGO_USER=${MONGO_USER}
      - REDIS_HOST=crater-redis
      - REDIS_PORT=6379
      - REDIS_PASS=${REDIS_PASS}
      - SQL_HOST=crater-mysql
      - SQL_PORT=3306
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - crater-net
    ports:
      - '3001:3000'

  crater-minio-dev:
    image: quay.io/minio/minio
    command: server /data --console-address ":9001"
    container_name: crater-minio-dev
    restart: always
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASS}
    networks: 
      - crater-net
    expose:
      - 9000
      - 9001
    ports:
      - '9081:9001'
      - '9080:9000'

#  crsh-minio-nginx:
#    depends_on:
#      - crsh-minio1
#      - crsh-minio2
#      - crsh-minio3
#      - crsh-minio4
#    image: nginx:alpine
#    container_name: crater-minio-nginx
#    restart: always
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf:ro
#    healthcheck:
#      test: ["CMD", "curl", "localhost:9001", "||", "exit", "1"]
#      interval: 120s
#      timeout: 20s
#      retries: 3
#    networks:
#      - crater-net
#    expose:
#      - 9000
#      - 9001
#    ports:
#      - '9001:9001'
#      - '9000:9000'
    
#  crsh-minio1:
#    <<: *minio-common
#    hostname: crsh-minio1
#    container_name: crater-minio1
#    volumes:
#      - crsh-minio1-1:/data1
#      - crsh-minio1-2:/data2
#  crsh-minio2:
#    <<: *minio-common
#    hostname: crsh-minio2
#    container_name: crater-minio2
#    volumes:
#      - crsh-minio2-1:/data1
#      - crsh-minio2-2:/data2
#  crsh-minio3:
#    <<: *minio-common
#    hostname: crsh-minio3
#    container_name: crater-minio3
#    volumes:
#      - crsh-minio3-1:/data1
#      - crsh-minio3-2:/data2
#  crsh-minio4:
#    <<: *minio-common
#    hostname: crsh-minio4
#    container_name: crater-minio4
#    volumes:
#      - crsh-minio4-1:/data1
#      - crsh-minio4-2:/data2
networks:
  crater-net:
    driver: bridge
#volumes:
#  crater-mongo-data:
#    driver: local
#    driver_opts:
#      type: none
#      o: bind
#      device: /raid/crater/db/mongo
#  crater-mysql-data:
#    driver: local
#      driver_opts:
#        type: none
#        o: bind
#        device: /raid/crater/db/mysql
#  crsh-minio1-1:
#    driver: local
#    driver_opts:
#      type: none
#      o: bind
#      device: /raid/crater/minio/1/1-1
#  crsh-minio1-2:
#    driver: local
#    driver_opts:
#      type: none
#      o: bind
#      device: /raid/crater/minio/2/1-2
#  crsh-minio2-1:
#    driver: local
#    driver_opts:
#      type: none
#      o: bind
#      device: /raid/crater/minio/3/2-1
#  crsh-minio2-2:
#    driver: local
#    driver_opts:
#      type: none
#      o: bind
#      device: /raid/crater/minio/4/2-2
#  crsh-minio3-1:
#    driver: local
#    driver_opts:
#      type: none
#      o: bind
#      device: /raid/crater/minio/1/3-1
#  crsh-minio3-2:
#    driver: local
#    driver_opts:
#      type: none
#      o: bind
#      device: /raid/crsh/minio/2/3-2
#  crsh-minio4-1:
#    driver: local
#    driver_opts:
#      type: none
#      o: bind
#      device: /raid/crsh/minio/3/4-1
#  crsh-minio4-2:
#    driver: local
#    driver_opts:
#      type: none
#      o: bind
#      device: /raid/crater/minio/4/4-2