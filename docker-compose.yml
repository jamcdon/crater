version: '3'

# minio common configs
#x-minio-common: &minio-common
#  image: quay.io/minio/minio
#  command: server --console-address ":9001" http://minio{1...4}/data/{1...2}
#  restart: always
#  expose:
#    - "9000"
#    - "9001"
#  environment:
#    MINIO_ROOT_USER: ${APP_DB_USER}
#    MINIO_ROOT_PASSWORD: ${APP_DB_PASSWORD}
#  healthcheck:
#    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
#    interval: 120s
#    timeout: 20s
#    retries: 3
#  networks:
#    - dockerd-net

services:
  dockerd-mongo:
    image: mongo:latest
    container_name: dockerd-mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${APP_DB_USER}"
      MONGO_INITDB_ROOT_PASSWORD: "${APP_DB_PASSWORD}"
    healthcheck:
      test: ["CMD", "echo", "'db.runCommand(\"ping\").ok'", "|", "mongo", "admin", "-u", "${APP_DB_USER}", "-p", "${APP_DB_PASSWORD}", "--quiet"]
      interval: 120s
      timeout: 20s
      retries: 3
    networks:
      - dockerd-net
    expose:
      - 27017
#    volumes:
#      - dockerd-mongo-data:/data/db
#  dockerd-mongo-express:
#    image: mongo-express
#    container_name: dockerd-mongo-express
#    restart: always
#    environment:
#      - ME_CONFIG_MONGODB_SERVER=dockerd-mongo
#      - ME_CONFIG_MONGODB_PORT=27017
#      - ME_CONFIG_MONGODB_BASICAUTH_USERNAME=${APP_DB_USER}
#      - ME_CONFIG_MONGODB_BASICAUTH_PASSWORD=${APP_DB_PASSWORD}
#      - ME_CONFIG_MONGODB_ENABLE_ADMIN='true'
#    networks:
#      - dockerd-net
#    ports:
#      - '6000:8081'
  dockerd-mysql:
    image: mysql
    container_name: dockerd-mysql
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${APP_DB_USER}
      MYSQL_PASSWORD: ${APP_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    healthcheck:
      test: ['CMD', 'mysql', '${DB_NAME}', '--user=${APP_DB_USER}', '--password=${APP_DB_PASSWORD}', '--silent', '--execute', '"SELECT 1;"']
      interval: 120s
      timeout: 20s
      retries: 3
    networks:
      - dockerd-net
    expose:
      - 3306
#    volumes:
#      - dockerd-mysql-data:/var/lib/mysql
#  dockerd-phpmyadmin:
#    image: phpmyadmin/phpmyadmin
#    container_name: dockerd-phpmyadmin
#    restart: always
#    environment:
#      PMA_HOST: dockerd-mysql
#      PMA_PORT: 3306
#      PMA_ARBITRARY: 1
#      PMA_USER: ${APP_DB_USER}
#      PMA_PASSWORD: ${APP_DB_PASSWORD}
#    networks:
#      - dockerd-net
#    ports:
#      - '5000:80'

  dockerd-gg:
    depends_on:
      - dockerd-mysql
      - dockerd-mongo
#      - dockerd-minio-nginx
    build: .
    container_name: dockerd-gg
    restart: always
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${APP_DB_USER}
      - SQL_HOST=dockerd-mysql
      - NO_SQL_HOST=dockerd-mongo
      - DB_DRIVER=mysql
      - DB_PASSWORD=${APP_DB_PASSWORD}
#      - MINIO_HOST=ddgg-minio-nginx
      - MINIO_HOST=dockerd-minio-dev
    networks:
      - dockerd-net
    ports:
      - '80:3000'

  dockerd-minio-dev:
    image: quay.io/minio/minio
    container_name: dockerd-minio-dev
    restart: always
    environment:
      MINIO_ROOT_USER: ${APP_DB_USER}
      MINIO_ROOT_PASSWORD: ${APP_DB_PASSWORD}
    networks: 
      - dockerd-net
    expose:
      - 9000
      - 9001
    ports:
      - '9081:9001'

#  ddgg-minio-nginx:
#    depends_on:
#      - ddgg-minio1
#      - ddgg-minio2
#      - ddgg-minio3
#      - ddgg-minio4
#    image: nginx:alpine
#    container_name: dockerd-minio-nginx
#    restart: always
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf:ro
#    healthcheck:
#      test: ["CMD", "curl", "localhost:9001", "||", "exit", "1"]
#      interval: 120s
#      timeout: 20s
#      retries: 3
#    networks:
#      - dockerd-net
#    expose:
#      - 9000
#      - 9001
#    ports:
#      - '9001:9001'
    
#  ddgg-minio1:
#    <<: *minio-common
#    hostname: ddgg-minio1
#    container_name: dockerd-minio1
#    volumes:
#      - ddgg-minio1-1:/data1
#      - ddgg-minio1-2:/data2
#  ddgg-minio2:
#    <<: *minio-common
#    hostname: ddgg-minio2
#    container_name: dockerd-minio2
#    volumes:
#      - ddgg-minio2-1:/data1
#      - ddgg-minio2-2:/data2
#  ddgg-minio3:
#    <<: *minio-common
#    hostname: ddgg-minio3
#    container_name: dockerd-minio3
#    volumes:
#      - ddgg-minio3-1:/data1
#      - ddgg-minio3-2:/data2
#  ddgg-minio4:
#    <<: *minio-common
#    hostname: ddgg-minio4
#    container_name: dockerd-minio4
#    volumes:
#      - ddgg-minio4-1:/data1
#      - ddgg-minio4-2:/data2
networks:
  dockerd-net:
    driver: bridge
#volumes:
#  dockerd-mongo-data:
#    driver: local
#    driver_opts:
#      type: none
#      o: bind
#      device: /raid/dockerd/db/mongo
#  dockerd-mysql-data:
#    driver: local
#      driver_opts:
#        type: none
#        o: bind
#        device: /raid/dockerd/db/mysql
#  ddgg-minio1-1:
#    driver: local
#    driver_opts:
#      type: none
#      o: bind
#      device: /raid/dockerd/minio/1/1-1
#  ddgg-minio1-2:
#    driver: local
#    driver_opts:
#      type: none
#      o: bind
#      device: /raid/dockerd/minio/2/1-2
#  ddgg-minio2-1:
#    driver: local
#    driver_opts:
#      type: none
#      o: bind
#      device: /raid/dockerd/minio/3/2-1
#  ddgg-minio2-2:
#    driver: local
#    driver_opts:
#      type: none
#      o: bind
#      device: /raid/dockerd/minio/4/2-2
#  ddgg-minio3-1:
#    driver: local
#    driver_opts:
#      type: none
#      o: bind
#      device: /raid/dockerd/minio/1/3-1
#  ddgg-minio3-2:
#    driver: local
#    driver_opts:
#      type: none
#      o: bind
#      device: /raid/dockerd/minio/2/3-2
#  ddgg-minio4-1:
#    driver: local
#    driver_opts:
#      type: none
#      o: bind
#      device: /raid/dockerd/minio/3/4-1
#  ddgg-minio4-2:
#    driver: local
#    driver_opts:
#      type: none
#      o: bind
#      device: /raid/dockerd/minio/4/4-2